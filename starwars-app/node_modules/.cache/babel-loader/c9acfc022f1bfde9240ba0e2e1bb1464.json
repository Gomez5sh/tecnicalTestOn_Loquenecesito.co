{"ast":null,"code":"var _jsxFileName = \"/home/gomez5sh/Documentos/Code/tecnicalTestOn_Loquenecesito.co/starwars-app/src/components/Home/CharacterList.js\";\nimport React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport People from \"./People\";\nimport { ALL_CHARACTERS } from \"../../data/data\";\nexport const CharacterList = () => {\n  //const { loading, error, data } = useQuery(ALL_CHARACTERS);\n  //if (error) return <p>Error :(</p>;\n  function renderCharacteres() {\n    const {\n      loading,\n      error,\n      data\n    } = useQuery(ALL_CHARACTERS);\n    if (error) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 23\n      }\n    }, \"Error :(\");\n    return data.allPeople.map(character => {\n      return /*#__PURE__*/React.createElement(People, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 14\n        }\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 23\n    }\n  }, \"LOADING ...\") : /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 44\n    }\n  }, renderCharacteres()));\n};","map":{"version":3,"sources":["/home/gomez5sh/Documentos/Code/tecnicalTestOn_Loquenecesito.co/starwars-app/src/components/Home/CharacterList.js"],"names":["React","useQuery","People","ALL_CHARACTERS","CharacterList","renderCharacteres","loading","error","data","allPeople","map","character"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,cAAT,QAA+B,iBAA/B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC;AAEA;AAEA,WAASC,iBAAT,GAA6B;AAC3B,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,QAA2BP,QAAQ,CAACE,cAAD,CAAzC;AACA,QAAII,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACX,WAAOC,IAAI,CAACC,SAAL,CAAeC,GAAf,CAAoBC,SAAD,IAAe;AACvC,0BAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFM,CAAP;AAGD;;AAED,sBAAO,0CAAGL,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAH,gBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,iBAAiB,EAAtB,CAAlC,CAAP;AACD,CAdM","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport People from \"./People\";\nimport { ALL_CHARACTERS } from \"../../data/data\";\n\nexport const CharacterList = () => {\n  //const { loading, error, data } = useQuery(ALL_CHARACTERS);\n\n  //if (error) return <p>Error :(</p>;\n\n  function renderCharacteres() {\n    const { loading, error, data } = useQuery(ALL_CHARACTERS);\n    if (error) return <p>Error :(</p>;\n    return data.allPeople.map((character) => {\n      return <People />;\n    });\n  }\n\n  return <>{loading ? <p>LOADING ...</p> : <ul>{renderCharacteres()}</ul>}</>;\n};\n"]},"metadata":{},"sourceType":"module"}